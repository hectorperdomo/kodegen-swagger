{{~#each classes}}
{{#if entityType.aggregateroot}}
  /{{lowerCase entity}}:
    post:
      tags:
      - "{{lowerCase entity}}"
      summary: "Add a new {{lowerCase entity}} to the domain."
      description: ""
      operationId: "add{{pascalCase entity}}"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "{{camelCase entity}} object that needs to be added to the domain"
        required: true
        schema:
          $ref: "#/definitions/{{pascalCase entity}}"
      responses:
        "405":
          description: "Invalid input"
      security:
      - petstore_auth:
        - "write:pets"
        - "read:pets"
    put:
      tags:
      - "{{lowerCase entity}}"
      summary: "Update an existing {{lowerCase entity}}."
      description: ""
      operationId: "update{{pascalCase entity}}"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "{{camelCase entity}} object that needs to be updated in the domain"
        required: true
        schema:
          $ref: "#/definitions/{{pascalCase entity}}"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "{{pascalCase entity}} not found"
        "405":
          description: "Validation exception"
      security:
      - petstore_auth:
        - "write:pets"
        - "read:pets"
  /{{lowerCase entity}}/{id}:
    get:
      tags:
      - "{{lowerCase entity}}"
      summary: "Find {{lowerCase entity}} by ID"
      description: "Returns a single {{lowerCase entity}}."
      operationId: "get{{pascalCase entity}}Id"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of {{lowerCase entity}} to return"
        required: true
        type: "string"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/{{pascalCase entity}}"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "{{pascalCase entity}} not found"
      security:
      - api_key: []
    delete:
      tags:
      - "{{lowerCase entity}}"
      summary: "Deletes a {{lowerCase entity}}"
      description: ""
      operationId: "delete{{pascalCase entity}}"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "api_key"
        in: "header"
        required: false
        type: "string"
      - name: "id"
        in: "path"
        description: "{{pascalCase entity}} id to delete"
        required: true
        type: "string"
        format: "uuid"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "{{pascalCase entity}} not found"
      security:
      - petstore_auth:
        - "write:pets"
        - "read:pets"
{{/if}}
{{/each}}
